/* ========================================
	DX22Base/
	------------------------------------
	オブジェクト種類登録用cpp
	------------------------------------
	UITypeRegistry.cpp
========================================== */

// =============== インクルード ===================
#include "UITypeRegistry.h"

// オブジェクト
#include "UIObjectBase.h"
#include "UIObjectText.h"

/* ========================================
	インスタンス取得関数
	-------------------------------------
	内容：インスタンスを取得する
	-------------------------------------
	戻値：インスタンス
=========================================== */
UITypeRegistry& UITypeRegistry::GetInstance()
{
	static UITypeRegistry instance;
	return instance;
}

/* ========================================
	オブジェクトクラス登録関数
	-------------------------------------
	内容：オブジェクトクラスをマップに登録する
	-------------------------------------
	引数1：オブジェクトクラス名
	引数2：オブジェクト生成関数
=========================================== */
void UITypeRegistry::Register(const std::string& sClassName, CreateFunction* func)
{
	m_UITypeMap[sClassName] = func;
}

/* ========================================
	オブジェクト生成関数
	-------------------------------------
	内容：クラス名文字列からオブジェクトを生成する
	-------------------------------------
	引数：オブジェクトクラス名
	-------------------------------------
	戻値：オブジェクト
=========================================== */
UIObjectBase* UITypeRegistry::CreateUI(const std::string& sClassName)
{
	// クラス名が登録されているか確認
	if (m_UITypeMap.find(sClassName) != m_UITypeMap.end())
	{
		return m_UITypeMap.at(sClassName)();
	}
	return nullptr;
}

/* ========================================
	全オブジェクト登録関数
	-------------------------------------
	内容：全てのオブジェクトを登録する
=========================================== */
void UITypeRegistry::RegisterAllUITypes()
{
	REGISTER_UI_TYPE(UIObjectBase);
	REGISTER_UI_TYPE(UIObjectText);

}
